services:
  php:
    container_name: mapinha-php
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    restart: unless-stopped
    tty: true
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - mapinha_network

  nginx:
    container_name: mapinha-nginx
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    restart: unless-stopped
    tty: true
    ports:
      - '8080:80'
      - '443:443'
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - mapinha_network

  postgres:
    container_name: mapinha-postgres
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    tty: true
    volumes:
      - mapinha_psql_data:/var/lib/postgresql/data:rw
    networks:
      - mapinha_network
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mapinha_psql}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_USER: ${POSTGRES_USER:-mapinha}

  mongo:
    container_name: mapinha-mongo
    image: mongo:7.0
    tty: true
    restart: unless-stopped
    networks:
      - mapinha_network
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE:-mapinha_nosql}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-password}
      MONGODB_DB: ${MONGODB_DB:-mapinha_nosql}
      MONGODB_USER: ${MONGODB_USER:-mapinha}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD:-password}
    volumes:
      - ./docker/mongo/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro

networks:
  mapinha_network:
    driver: bridge

volumes:
  mapinha_psql_data:
